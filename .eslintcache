[{"C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\index.js":"1","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\components\\App.js":"2","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\reducers\\index.js":"3","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\reducers\\fileReducer.js":"4","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\actions\\types.js":"5","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\components\\FileUpload.js":"6","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\actions\\index.js":"7","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\components\\Header.js":"8","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\components\\history.js":"9","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\reducers\\modelReducer.js":"10"},{"size":574,"mtime":1608025222866,"results":"11","hashOfConfig":"12"},{"size":1552,"mtime":1608027862330,"results":"13","hashOfConfig":"12"},{"size":479,"mtime":1608140321834,"results":"14","hashOfConfig":"12"},{"size":452,"mtime":1608047657819,"results":"15","hashOfConfig":"12"},{"size":156,"mtime":1608140376337,"results":"16","hashOfConfig":"12"},{"size":2606,"mtime":1608140650229,"results":"17","hashOfConfig":"12"},{"size":1845,"mtime":1608154556992,"results":"18","hashOfConfig":"12"},{"size":559,"mtime":1608027611186,"results":"19","hashOfConfig":"12"},{"size":90,"mtime":1608027838098,"results":"20","hashOfConfig":"12"},{"size":307,"mtime":1608140397888,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1216grt",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\index.js",[],["48","49"],"C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\components\\App.js",["50"],"import axios from 'axios'\r\nimport React from 'react'\r\nimport FileUpload from './FileUpload'\r\nimport { Router, Route, Switch} from 'react-router-dom';\r\nimport Header from './Header'\r\nimport history from './history'\r\n\r\nconst App = () => {\r\n    return(\r\n        <div className=\"ui container\">\r\n            <Router history={history}>\r\n                <div>\r\n                    <Header/>\r\n                    <Switch>\r\n                    <Route path=\"/\" exact component={FileUpload}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n    // state = {\r\n    //     selectedFile: null\r\n    // }\r\n\r\n    // onFileChange = (event) => {\r\n    //     event.preventDefault()\r\n    //     console.log('change')\r\n    //     this.setState({selectedFile: event.target.files[0]})\r\n    // }\r\n\r\n    // onFileUpload = async () => {\r\n    //     console.log(this.state.selectedFile.name)\r\n    //     const formData = new FormData()\r\n    //     let file = this.state.selectedFile\r\n    //     formData.append('file', file)\r\n    //     await axios.post('http://127.0.0.1:5000/post', formData)\r\n    // }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <div>\r\n    //             <h1>Hello World!</h1>\r\n    //         <div> \r\n    //             <input type=\"file\" onChange={this.onFileChange} /> \r\n    //             <button onClick={this.onFileUpload}> \r\n    //               Upload! \r\n    //             </button> \r\n    //         </div> \r\n    //         </div>\r\n    //     )\r\n    // }\r\n}\r\n\r\nexport default App","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\reducers\\index.js",[],"C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\reducers\\fileReducer.js",["51","52","53","54"],"import {\r\n    FILE_SET, FILE_UPLOAD, COLS_GET\r\n} from '../actions/types'\r\n\r\nexport default (state={}, action) => {\r\n    switch (action.type) {\r\n        case FILE_SET:\r\n            return {...state, ['file']: action.payload}\r\n        case FILE_UPLOAD:\r\n            return {...state, ['uploadresponse']: action.payload}\r\n        case COLS_GET:\r\n            return {...state, ['cols']: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\actions\\types.js",[],"C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\components\\FileUpload.js",["55"],"import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {getCols, uploadFile, trainModel} from '../actions'\r\n\r\n// import StreamForm from './StreamForm'\r\n\r\nclass FileUpload extends React.Component {\r\n    \r\n    state = {\r\n\r\n    }\r\n\r\n    onFileChange = (event) => {\r\n        event.preventDefault()\r\n        console.log('change')\r\n        const f = event.target.value\r\n        // this.props.setFile(f)\r\n        this.setState({selectedFile: event.target.files[0]})\r\n    }\r\n\r\n    \r\n    onFileUpload = () => {\r\n      \r\n        const formData = new FormData()\r\n        formData.append('file', this.state.selectedFile)\r\n\r\n        this.props.uploadFile(formData)\r\n        \r\n    }\r\n\r\n    onDropSelect = (event) => {\r\n        this.setState({dropselected: event.target.value})\r\n    }\r\n\r\n    dropDown = () => {\r\n\r\n        // console.log(this.props.file['cols'])\r\n        // console.log('up response')\r\n        // console.log(this.props.file['uploadresponse'])\r\n        if (this.props.file['uploadresponse']){\r\n        let buildList = this.props.file['uploadresponse'].map((index, ite) => <option key={ite} value={index}>{index}</option>)\r\n            \r\n            // console.log('calling')\r\n            // this.props.getCols()\r\n        return(\r\n            <div>\r\n            <label htmlFor=\"preds\">Predict: </label>\r\n            <select name=\"preds\" onChange={this.onDropSelect} id=\"pred\">\r\n                {buildList}\r\n            </select>\r\n            </div>\r\n        )\r\n    }\r\n    }\r\n\r\n    onTrain = () => {\r\n        if (this.state.dropselected) {\r\n            console.log(this.state.dropselected)\r\n            this.props.trainModel(this.state.dropselected)\r\n        }\r\n    }\r\n\r\n    modelPredict = () => {\r\n        if (this.state.model) {\r\n            return (\r\n                <button>PREDICT!</button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('rendered')\r\n        console.log(this.props.file)\r\n        \r\n        return (\r\n            <div>\r\n                <h1>Hello World!</h1>\r\n            <div> \r\n                <input type=\"file\" onChange={this.onFileChange} /> \r\n                <button onClick={this.onFileUpload}> Upload! </button> \r\n                {this.dropDown()}\r\n                <button onClick={this.onTrain}> Train! </button>\r\n                {this.modelPredict}\r\n            </div> \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        file: state.files,\r\n        model: state.model\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {uploadFile, getCols, trainModel}) (FileUpload)","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\actions\\index.js",["56"],"C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\components\\Header.js",["57"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n// import GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>Header</div>\r\n    // <div className=\"ui secondary pointing menu\">\r\n    //     <Link to=\"/\" className=\"item\">\r\n    //         Streamer\r\n    //     </Link>\r\n    //     <div className=\"right menu\">\r\n    //         <Link to=\"/\" className=\"item\">\r\n    //             All Sreams\r\n    //         </Link>\r\n    //         <GoogleAuth/>\r\n    //     </div>\r\n    // </div>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\components\\history.js",[],"C:\\Users\\hasee\\Documents\\projects\\quicml\\src\\reducers\\modelReducer.js",["58","59","60","61","62"],"import {\r\n    FILE_SET, FILE_UPLOAD, COLS_GET, MODEL_TRAIN\r\n} from '../actions/types'\r\n\r\nexport default (state={}, action) => {\r\n    switch (action.type) {\r\n        case MODEL_TRAIN:\r\n            return {...state, ['modeltrainresponse']: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":5,"column":1,"nodeType":"73","endLine":16,"endColumn":2},{"ruleId":"74","severity":1,"message":"75","line":8,"column":31,"nodeType":"76","messageId":"77","endLine":8,"endColumn":55,"fix":"78"},{"ruleId":"74","severity":1,"message":"79","line":10,"column":31,"nodeType":"76","messageId":"77","endLine":10,"endColumn":65,"fix":"80"},{"ruleId":"74","severity":1,"message":"81","line":12,"column":31,"nodeType":"76","messageId":"77","endLine":12,"endColumn":55,"fix":"82"},{"ruleId":"67","severity":1,"message":"83","line":16,"column":15,"nodeType":"69","messageId":"70","endLine":16,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"84","line":2,"column":9,"nodeType":"69","messageId":"70","endLine":2,"endColumn":13},{"ruleId":"67","severity":1,"message":"85","line":2,"column":5,"nodeType":"69","messageId":"70","endLine":2,"endColumn":13},{"ruleId":"67","severity":1,"message":"86","line":2,"column":15,"nodeType":"69","messageId":"70","endLine":2,"endColumn":26},{"ruleId":"67","severity":1,"message":"87","line":2,"column":28,"nodeType":"69","messageId":"70","endLine":2,"endColumn":36},{"ruleId":"71","severity":1,"message":"72","line":5,"column":1,"nodeType":"73","endLine":12,"endColumn":2},{"ruleId":"74","severity":1,"message":"88","line":8,"column":31,"nodeType":"76","messageId":"77","endLine":8,"endColumn":69,"fix":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-computed-key","Unnecessarily computed property ['file'] found.","Property","unnecessarilyComputedProperty",{"range":"92","text":"93"},"Unnecessarily computed property ['uploadresponse'] found.",{"range":"94","text":"95"},"Unnecessarily computed property ['cols'] found.",{"range":"96","text":"97"},"'f' is assigned a value but never used.","'Link' is defined but never used.","'FILE_SET' is defined but never used.","'FILE_UPLOAD' is defined but never used.","'COLS_GET' is defined but never used.","Unnecessarily computed property ['modeltrainresponse'] found.",{"range":"98","text":"99"},"no-global-assign","no-unsafe-negation",[198,206],"'file'",[282,300],"'uploadresponse'",[373,381],"'cols'",[214,236],"'modeltrainresponse'"]